version: '3.9'

services:
  django:
    build:
      context: .
      dockerfile: ./django_service/build/Dockerfile.django
    env_file:
      - .env
    container_name: django_service
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    restart: unless-stopped
    networks:
      - backend

  fastapi:
    build:
      context: .
      dockerfile: ./fastapi_service/build/Dockerfile.fastapi
    env_file:
      - .env
    container_name: fastapi_service
    ports:
      - "8100:8100"
    depends_on:
      - grpc
      - db
      - elasticsearch
      - kibana
      - rabbitmq
    restart: unless-stopped
    networks:
      - backend

  grpc:
    build:
      context: .
      dockerfile: ./grpc_service/build/Dockerfile.grpc
    env_file:
      - .env
    container_name: grpc_service
    ports:
      - "50051:50051"
    depends_on:
      - db
      - elasticsearch
      - kibana
      - rabbitmq
    restart: unless-stopped
    networks:
      - backend

  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_DB: test_task_database
      POSTGRES_USER: test_task
      POSTGRES_PASSWORD: Lovell32bd
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - backend
      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - backend
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: logstash
    volumes:
      - ./config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - backend
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - backend
      - elk

volumes:
  postgres_data:
  es_data:
  rabbitmq_data:

networks:
  backend:
    driver: bridge
  elk:
    driver: bridge
